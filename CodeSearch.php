<?php

// This file is generated by Composer
require_once __DIR__ . '/vendor/autoload.php';

use Github\Client;
use Symfony\Component\HttpClient\HttplugClient;
use Symfony\Component\Dotenv\Dotenv;

/**
 * Search for code with GitHub API
 */
class CodeSearch
{
    private $client;
    private $query;

    public function __construct($query)
    {
        $dotenv = new Dotenv();
        $dotenv->load(__DIR__.'/.env');
        $auth_token = $_ENV['AUTH_TOKEN'];
    
        // -----> hacky way to get the text matches... clean me up later! <-----
        // in vendor/knplabs/github-api/lib/Github/Api/Search.php add the following to the start of the code method:
        // $this->acceptHeaderValue = 'application/vnd.github.v3.text-match+json';

        $this->query = $query;
        $this->client = Client::createWithHttpClient(new HttplugClient());
        $this->client = new \Github\Client();
        $this->client->authenticate($auth_token, null, Github\Client::AUTH_ACCESS_TOKEN);
    }

    /**
     * search
     *
     * @return void
     */
    public function search()
    {
        try {
            $files = $this->client->api('search')->code($this->query);

            $output = array_map(
                function ($file) {
                    $data = [
                        'repository' => $file['repository']['name'],
                        'path' => $file['path'],
                        'url' => $file['html_url'],
                        'text_matches' => $file['text_matches'][0]['fragment']
                    ];
                    return $data;
                }, 
                $files['items']
            );

            print("Files found: " . count($files));
            print("RESULTS: " . PHP_EOL);
            print_r($output);

        } catch (\Exception $e) {
            print $e->getMessage() . PHP_EOL;
        }
    }
}

